{"remainingRequest":"C:\\Users\\mpmcs\\Desktop\\repository\\chat_app_front_end\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!C:\\Users\\mpmcs\\Desktop\\repository\\chat_app_front_end\\src\\views\\ChatScreen.vue?vue&type=template&id=405afd9e","dependencies":[{"path":"C:\\Users\\mpmcs\\Desktop\\repository\\chat_app_front_end\\src\\views\\ChatScreen.vue","mtime":1625088588999},{"path":"C:\\Users\\mpmcs\\Desktop\\repository\\chat_app_front_end\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1624994109000},{"path":"C:\\Users\\mpmcs\\Desktop\\repository\\chat_app_front_end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\mpmcs\\Desktop\\repository\\chat_app_front_end\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1624994108000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQogIDx1c2VyLWxpc3QgOnVzZXJsaXN0PSJ1c2VyTGlzdCI+PC91c2VyLWxpc3Q+DQogIDxtZXNzYWdlLXBhbmVsDQogICAgQGNsaWNrLW1lc3NhZ2UtYnV0dG9uPSJzZW5kTWVzc2FnZSINCiAgICA6bWVzc2FnZXM9Im1lc3NhZ2VzIg0KICA+PC9tZXNzYWdlLXBhbmVsPg0K"},{"version":3,"sources":["C:\\Users\\mpmcs\\Desktop\\repository\\chat_app_front_end\\src\\views\\ChatScreen.vue"],"names":[],"mappings":";EACE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC3C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC","file":"C:/Users/mpmcs/Desktop/repository/chat_app_front_end/src/views/ChatScreen.vue","sourceRoot":"","sourcesContent":["<template>\r\n  <user-list :userlist=\"userList\"></user-list>\r\n  <message-panel\r\n    @click-message-button=\"sendMessage\"\r\n    :messages=\"messages\"\r\n  ></message-panel>\r\n</template>\r\n\r\n\r\n<script>\r\nimport UserList from \"../components/UserList.vue\";\r\nimport MessagePanel from \"../components/MessagePanel.vue\";\r\nconst signalR = require(\"@microsoft/signalr\");\r\n\r\nexport default {\r\n  components: {\r\n    UserList,\r\n    MessagePanel,\r\n  },\r\n  data() {\r\n    return {\r\n      userList: [],\r\n      messages: [],\r\n      connection: null,\r\n      username: this.$route.query.username,\r\n      room: this.$route.query.room,\r\n    };\r\n  },\r\n  mounted() {\r\n    this.connection = new signalR.HubConnectionBuilder()\r\n      .withUrl(\"https://localhost:5001/chatHub\")\r\n      .build();\r\n\r\n    this.connection.on(\"receiveMessage\", (message) => {\r\n      console.log(message);\r\n      console.log(\"receiveMessage is invoked.\");\r\n    });\r\n    this.connection.on(\"updateUsers\", (users) => {\r\n      this.userList = users;\r\n    });\r\n    this.connection.start().then(() => {\r\n      this.connection.invoke(\"CreateUser\", this.username, this.room);\r\n      this.connection.invoke(\"ManifestNewUser\", this.username, this.room);\r\n    });\r\n  },\r\n  beforeUnmount() {\r\n    this.connection\r\n      .stop()\r\n      .then(() =>\r\n        this.connection.invoke(\"RemoveUser\", this.usernmae, this.room)\r\n      );\r\n  },\r\n  methods: {\r\n    sendMessage(messageInfo) {\r\n      //Send message\r\n      var message = {\r\n        user: this.username,\r\n        date: \"12\",\r\n        text: messageInfo,\r\n      };\r\n\r\n      this.connection.invoke(\r\n        \"sendMessage\",\r\n        this.username,\r\n        messageInfo,\r\n        this.room\r\n      );\r\n      this.messages.push(message);\r\n    },\r\n  },\r\n};\r\n</script>"]}]}